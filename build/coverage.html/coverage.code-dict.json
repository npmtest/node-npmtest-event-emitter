{"/home/travis/build/npmtest/node-npmtest-event-emitter/test.js":"/* istanbul instrument in package npmtest_event_emitter */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-event-emitter/lib.npmtest_event_emitter.js":"/* istanbul instrument in package npmtest_event_emitter */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_event_emitter = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_event_emitter = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-event-emitter/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-event-emitter && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_event_emitter */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_event_emitter\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_event_emitter.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_event_emitter.rollup.js'] =\n            local.assetsDict['/assets.npmtest_event_emitter.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_event_emitter.__dirname + '/lib.npmtest_event_emitter.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-event-emitter/node_modules/event-emitter/index.js":"'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n","/home/travis/build/npmtest/node-npmtest-event-emitter/node_modules/event-emitter/all-off.js":"'use strict';\n\nvar value = require('es5-ext/object/valid-object')\n\n  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function (emitter/*, type*/) {\n\tvar type = arguments[1], data;\n\n\tvalue(emitter);\n\n\tif (type !== undefined) {\n\t\tdata = hasOwnProperty.call(emitter, '__ee__') && emitter.__ee__;\n\t\tif (!data) return;\n\t\tif (data[type]) delete data[type];\n\t\treturn;\n\t}\n\tif (hasOwnProperty.call(emitter, '__ee__')) delete emitter.__ee__;\n};\n","/home/travis/build/npmtest/node-npmtest-event-emitter/node_modules/event-emitter/emit-error.js":"'use strict';\n\nvar ensureError  = require('es5-ext/error/valid-error')\n  , ensureObject = require('es5-ext/object/valid-object')\n\n  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function (err) {\n\t(ensureObject(this) && ensureError(err));\n\tif (!hasOwnProperty.call(ensureObject(this), '__ee__')) throw err;\n\tif (!this.__ee__.error) throw err;\n\tthis.emit('error', err);\n};\n","/home/travis/build/npmtest/node-npmtest-event-emitter/node_modules/event-emitter/has-listeners.js":"'use strict';\n\nvar isEmpty = require('es5-ext/object/is-empty')\n  , value   = require('es5-ext/object/valid-value')\n\n  , hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function (obj/*, type*/) {\n\tvar type;\n\tvalue(obj);\n\ttype = arguments[1];\n\tif (arguments.length > 1) {\n\t\treturn hasOwnProperty.call(obj, '__ee__') && Boolean(obj.__ee__[type]);\n\t}\n\treturn obj.hasOwnProperty('__ee__') && !isEmpty(obj.__ee__);\n};\n","/home/travis/build/npmtest/node-npmtest-event-emitter/node_modules/event-emitter/pipe.js":"'use strict';\n\nvar aFrom          = require('es5-ext/array/from')\n  , remove         = require('es5-ext/array/#/remove')\n  , value          = require('es5-ext/object/valid-object')\n  , d              = require('d')\n  , emit           = require('./').methods.emit\n\n  , defineProperty = Object.defineProperty\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\nmodule.exports = function (e1, e2/*, name*/) {\n\tvar pipes, pipe, desc, name;\n\n\t(value(e1) && value(e2));\n\tname = arguments[2];\n\tif (name === undefined) name = 'emit';\n\n\tpipe = {\n\t\tclose: function () { remove.call(pipes, e2); }\n\t};\n\tif (hasOwnProperty.call(e1, '__eePipes__')) {\n\t\t(pipes = e1.__eePipes__).push(e2);\n\t\treturn pipe;\n\t}\n\tdefineProperty(e1, '__eePipes__', d('c', pipes = [e2]));\n\tdesc = getOwnPropertyDescriptor(e1, name);\n\tif (!desc) {\n\t\tdesc = d('c', undefined);\n\t} else {\n\t\tdelete desc.get;\n\t\tdelete desc.set;\n\t}\n\tdesc.value = function () {\n\t\tvar i, emitter, data = aFrom(pipes);\n\t\temit.apply(this, arguments);\n\t\tfor (i = 0; (emitter = data[i]); ++i) emit.apply(emitter, arguments);\n\t};\n\tdefineProperty(e1, name, desc);\n\treturn pipe;\n};\n","/home/travis/build/npmtest/node-npmtest-event-emitter/node_modules/event-emitter/unify.js":"'use strict';\n\nvar forEach    = require('es5-ext/object/for-each')\n  , validValue = require('es5-ext/object/valid-object')\n\n  , push = Array.prototype.apply, defineProperty = Object.defineProperty\n  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty\n  , d = { configurable: true, enumerable: false, writable: true };\n\nmodule.exports = function (e1, e2) {\n\tvar data;\n\t(validValue(e1) && validValue(e2));\n\tif (!hasOwnProperty.call(e1, '__ee__')) {\n\t\tif (!hasOwnProperty.call(e2, '__ee__')) {\n\t\t\td.value = create(null);\n\t\t\tdefineProperty(e1, '__ee__', d);\n\t\t\tdefineProperty(e2, '__ee__', d);\n\t\t\td.value = null;\n\t\t\treturn;\n\t\t}\n\t\td.value = e2.__ee__;\n\t\tdefineProperty(e1, '__ee__', d);\n\t\td.value = null;\n\t\treturn;\n\t}\n\tdata = d.value = e1.__ee__;\n\tif (!hasOwnProperty.call(e2, '__ee__')) {\n\t\tdefineProperty(e2, '__ee__', d);\n\t\td.value = null;\n\t\treturn;\n\t}\n\tif (data === e2.__ee__) return;\n\tforEach(e2.__ee__, function (listener, name) {\n\t\tif (!data[name]) {\n\t\t\tdata[name] = listener;\n\t\t\treturn;\n\t\t}\n\t\tif (typeof data[name] === 'object') {\n\t\t\tif (typeof listener === 'object') push.apply(data[name], listener);\n\t\t\telse data[name].push(listener);\n\t\t} else if (typeof listener === 'object') {\n\t\t\tlistener.unshift(data[name]);\n\t\t\tdata[name] = listener;\n\t\t} else {\n\t\t\tdata[name] = [data[name], listener];\n\t\t}\n\t});\n\tdefineProperty(e2, '__ee__', d);\n\td.value = null;\n};\n","/home/travis/build/npmtest/node-npmtest-event-emitter/node_modules/event-emitter/benchmark/many-on.js":"'use strict';\n\n// Benchmark comparing performance of event emit for many listeners\n// To run it, do following in memoizee package path:\n//\n// $ npm install eventemitter2 signals\n// $ node benchmark/many-on.js\n\nvar forEach    = require('es5-ext/object/for-each')\n  , pad        = require('es5-ext/string/#/pad')\n\n  , now = Date.now\n\n  , time, count = 1000000, i, data = {}\n  , ee, native, ee2, signals, a = {}, b = {};\n\nee = (function () {\n\tvar ee = require('../')();\n\tee.on('test', function () { return arguments; });\n\tee.on('test', function () { return arguments; });\n\treturn ee.on('test', function () { return arguments; });\n}());\n\nnative = (function () {\n\tvar ee = require('events');\n\tee = new ee.EventEmitter();\n\tee.on('test', function () { return arguments; });\n\tee.on('test', function () { return arguments; });\n\treturn ee.on('test', function () { return arguments; });\n}());\n\nee2 = (function () {\n\tvar ee = require('eventemitter2');\n\tee = new ee.EventEmitter2();\n\tee.on('test', function () { return arguments; });\n\tee.on('test', function () { return arguments; });\n\treturn ee.on('test', function () { return arguments; });\n}());\n\nsignals = (function () {\n\tvar Signal = require('signals')\n\t  , ee = { test: new Signal() };\n\tee.test.add(function () { return arguments; });\n\tee.test.add(function () { return arguments; });\n\tee.test.add(function () { return arguments; });\n\treturn ee;\n}());\n\nconsole.log(\"Emit for 3 listeners\", \"x\" + count + \":\\n\");\n\ni = count;\ntime = now();\nwhile (i--) {\n\tee.emit('test', a, b);\n}\ndata[\"event-emitter (this implementation)\"] = now() - time;\n\ni = count;\ntime = now();\nwhile (i--) {\n\tnative.emit('test', a, b);\n}\ndata[\"EventEmitter (Node.js native)\"] = now() - time;\n\ni = count;\ntime = now();\nwhile (i--) {\n\tee2.emit('test', a, b);\n}\ndata.EventEmitter2 = now() - time;\n\ni = count;\ntime = now();\nwhile (i--) {\n\tsignals.test.dispatch(a, b);\n}\ndata.Signals = now() - time;\n\nforEach(data, function (value, name, obj, index) {\n\tconsole.log(index + 1 + \":\",  pad.call(value, \" \", 5), name);\n}, null, function (a, b) {\n\treturn this[a] - this[b];\n});\n","/home/travis/build/npmtest/node-npmtest-event-emitter/node_modules/event-emitter/benchmark/single-on.js":"'use strict';\n\n// Benchmark comparing performance of event emit for single listener\n// To run it, do following in memoizee package path:\n//\n// $ npm install eventemitter2 signals\n// $ node benchmark/single-on.js\n\nvar forEach    = require('es5-ext/object/for-each')\n  , pad        = require('es5-ext/string/#/pad')\n\n  , now = Date.now\n\n  , time, count = 1000000, i, data = {}\n  , ee, native, ee2, signals, a = {}, b = {};\n\nee = (function () {\n\tvar ee = require('../');\n\treturn ee().on('test', function () { return arguments; });\n}());\n\nnative = (function () {\n\tvar ee = require('events');\n\treturn (new ee.EventEmitter()).on('test', function () { return arguments; });\n}());\n\nee2 = (function () {\n\tvar ee = require('eventemitter2');\n\treturn (new ee.EventEmitter2()).on('test', function () { return arguments; });\n}());\n\nsignals = (function () {\n\tvar Signal = require('signals')\n\t  , ee = { test: new Signal() };\n\tee.test.add(function () { return arguments; });\n\treturn ee;\n}());\n\nconsole.log(\"Emit for single listener\", \"x\" + count + \":\\n\");\n\ni = count;\ntime = now();\nwhile (i--) {\n\tee.emit('test', a, b);\n}\ndata[\"event-emitter (this implementation)\"] = now() - time;\n\ni = count;\ntime = now();\nwhile (i--) {\n\tnative.emit('test', a, b);\n}\ndata[\"EventEmitter (Node.js native)\"] = now() - time;\n\ni = count;\ntime = now();\nwhile (i--) {\n\tee2.emit('test', a, b);\n}\ndata.EventEmitter2 = now() - time;\n\ni = count;\ntime = now();\nwhile (i--) {\n\tsignals.test.dispatch(a, b);\n}\ndata.Signals = now() - time;\n\nforEach(data, function (value, name, obj, index) {\n\tconsole.log(index + 1 + \":\",  pad.call(value, \" \", 5), name);\n}, null, function (a, b) {\n\treturn this[a] - this[b];\n});\n"}